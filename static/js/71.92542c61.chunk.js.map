{"version":3,"file":"static/js/71.92542c61.chunk.js","mappings":"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","sources":["components/Loading.jsx","pages/Product/ProductPlatorm.jsx","pages/Product/ProductInfo.jsx","pages/Product/AddToCartProduct.jsx","pages/Product/ProductReviews.jsx","pages/Product/RelatedProducts.jsx","pages/Product/Product.jsx","assets/helper/numberValidity.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className='mainLoader' />\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useState, useEffect } from 'react';\r\n\r\nfunction ProductPlatorm({ selectedProduct, setSelectedProduct }) {\r\n\r\n    const prepareList = () => {\r\n        const newSelected = {...selectedProduct};\r\n        const newList = {};\r\n        for(let item of selectedProduct.productData.platforms) {\r\n            newList[item.name] = {...item, selected: false}\r\n        }\r\n        newSelected.platforms = {...newList};\r\n        setSelectedProduct({...newSelected});\r\n    }\r\n\r\n    const platformClickHandler = (clickedItem) => {\r\n        const newSelected = {...selectedProduct};\r\n        const selectedPLatforms = [];\r\n        newSelected.platforms[clickedItem].selected = !newSelected.platforms[clickedItem].selected;\r\n        for(let item in newSelected.platforms) {\r\n            if(newSelected.platforms[item].selected) {\r\n                selectedPLatforms.push(newSelected.platforms[item]);\r\n            }\r\n        }\r\n        newSelected.selectedPLatforms = selectedPLatforms;\r\n        setSelectedProduct({...newSelected});\r\n    }\r\n\r\n    useEffect(() => {\r\n      prepareList();\r\n    }, [])\r\n    \r\n    return (\r\n        <div className='flex flex-col gap-4 my-8 productInfoBox' data-testid='platforms'>\r\n            <p>\r\n                Select Platform:\r\n            </p>\r\n            <div className='flex-gap-2'>\r\n            {\r\n                selectedProduct.platforms &&\r\n                Object.entries(selectedProduct.platforms).map(platform => {\r\n                    // platform[0] = platform name\r\n                    // platform[1] = platform object\r\n                    \r\n                    return ( \r\n                        <button \r\n                            className={`${platform[1].selected ? \"platformBtn_selected\" : \"platformBtn\"} me-4 my-2 py-2 px-4 cursor-pointer`} \r\n                            key={platform[1]._id}\r\n                            onClick={() => platformClickHandler(platform[0])}\r\n                        >\r\n                            { platform[0] }\r\n                        </button>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPlatorm;","import React from 'react';\r\nimport starIcon from \"../../assets/icons/iconPics/star.jpg\";\r\n\r\n\r\nfunction ProductInfo({ currencies, productData }) {\r\n    return (\r\n        <>\r\n            <h1 className='font-medium text-2xl mt-2 productInfo_title' data-testid='productName'>\r\n                { productData.name }\r\n            </h1>\r\n            <div className='flex items-center gap-1 mt-2 productInfo_title'>\r\n                {\r\n                Array.from({ length: productData.stars }).map((star, index) => (\r\n                    <img key={index} src={starIcon} className='w-3.5' />\r\n                ))\r\n                }\r\n            </div>\r\n            <p className='mt-5 text-3xl font-medium productInfo_title'>\r\n                { currencies.uk.sign } { productData.price }\r\n            </p>\r\n            <p className='mt-5 text-gray-500 md:w-4/5'>\r\n                { productData.description }\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductInfo","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from \"react-router\"\r\n\r\n// helper\r\nimport { numberValidity } from '../../assets/helper/numberValidity';\r\n\r\n// context\r\nimport { RouteContext } from '../../assets/context/RouteContext';\r\nimport { InCartContext } from '../../assets/context/InCartContext';\r\n\r\n// components\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction AddToCartProduct({ selectedProduct, setSelectedProduct }) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // ---------------------------------- Context ---------------------------------- //\r\n    const routesList = useContext(RouteContext);\r\n    const { inCartItems, updateInCart, setLocalItems } = useContext(InCartContext);\r\n    \r\n    \r\n    // ---------------------------------- State ---------------------------------- //\r\n    const [showAddToCart, setShowAddToCart] = useState(false);\r\n\r\n\r\n    // ---------------------------------- Functions ---------------------------------- //\r\n    const checkShowCart = () => {\r\n        if(selectedProduct.platforms === null) {\r\n            setShowAddToCart(false);\r\n            return;\r\n        }\r\n\r\n        const platformSelected = [];\r\n        for(let item in selectedProduct.platforms) {\r\n            if(selectedProduct.platforms[item].selected) {\r\n                platformSelected.push(selectedProduct.platforms[item]);\r\n            }\r\n        }\r\n        setShowAddToCart(platformSelected.length)\r\n    }\r\n\r\n    const inputOnChange = (e) => {\r\n        const isValid = numberValidity(e.target.value, selectedProduct.productData.availabe);\r\n        const newSelected = {...selectedProduct};\r\n        if(!isValid.status) {\r\n            toast.error(isValid.text);\r\n            newSelected.itemNumber = 0;\r\n            setSelectedProduct({...newSelected});\r\n        }\r\n        else {\r\n            newSelected.itemNumber = Number(e.target.value);\r\n            setSelectedProduct({...newSelected});\r\n        }\r\n    }\r\n\r\n    const addToCartHandler = () => {\r\n        if(selectedProduct.itemNumber) {\r\n            updateCartList();\r\n        }\r\n        else {\r\n            toast.error(\"Tell us how many you want\");\r\n            toast.error(`And Enter a Correct Number`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    const updateCartList = () => {\r\n        const newInCartItems = [...inCartItems];\r\n        for(let platform of selectedProduct.selectedPLatforms) {\r\n            newInCartItems.push({\r\n                product: selectedProduct.productData,\r\n                number: selectedProduct.itemNumber,\r\n                platform\r\n            })\r\n        }\r\n        updateInCart(newInCartItems);\r\n        setLocalItems();\r\n        doAfterAdd();\r\n    }\r\n\r\n    const doAfterAdd = () => {\r\n        if(showAddToCart) {\r\n            toast.success(`${selectedProduct.productData.name} successfully added.`);\r\n            selfDestruction();\r\n            navigate(routesList.cart.url);\r\n        }\r\n    }\r\n\r\n    const selfDestruction = () => {\r\n        const newSelected = {\r\n            productData: null,\r\n            platforms: null,\r\n            selectedPLatforms: [],\r\n            itemNumber: 0\r\n        }\r\n        setSelectedProduct({...newSelected});\r\n    }\r\n\r\n    // ---------------------------------- Effects ---------------------------------- //\r\n    useEffect(() => {\r\n      checkShowCart();\r\n    }, [selectedProduct])  \r\n    \r\n    return (\r\n        Boolean(showAddToCart) &&\r\n        <div className='addToCartSection'>\r\n            <div>\r\n                <button onClick={addToCartHandler} className=\"bg-black text-white px-8 py-3 text-sm active:bg-gray-700 cursor-pointer\">\r\n                    ADD TO CART\r\n                </button>\r\n                <input onChange={inputOnChange} className='itemNumberInput py-2 px-2' placeholder='1' type=\"number\" />\r\n            </div>\r\n\r\n            <div className='text-sm text-gray-500 flex flex-col gap-1 smallDescriptionProduct'>\r\n                <p>100% Original product</p>\r\n                <p>Cash on delivery is available on this product</p>\r\n                <p>Easy return and exchange policy within 7 days</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToCartProduct","import React, { useState } from 'react'\r\n\r\nfunction ProductReviews({selectedProduct}) {\r\n\r\n    const [active, setActive] = useState(\"description\");\r\n\r\n    return (\r\n        <div className='mt-20'>\r\n            <div className=\"flex\">\r\n                <b onClick={() => setActive(\"description\")} className='mainBorder px-5 py-3 text-sm cursor-pointer'>\r\n                    Description\r\n                </b>\r\n                <p onClick={selectedProduct.reveiws && selectedProduct.reveiws.length ? setActive(\"reviews\") : () => {}} className='mainBorder px-5 py-3 text-sm cursor-pointer'>\r\n                    {`Reveiws (${selectedProduct.reveiws && selectedProduct.reveiws.length ? selectedProduct.reveiws.length : \"0\" })`}\r\n                </p>\r\n            </div>\r\n            {\r\n                active === \"description\" &&\r\n                <div className=\"flex flex-col gap-4 mainBorder px-6 py-6 text-sm text-gray-500\">\r\n                    <p>\r\n                        { selectedProduct.productData.description }\r\n                    </p>\r\n                    <p>\r\n                        {`E-commerce websites typically display products or sevices along with detailed descriptions, images, prices, and any available variantions (e.g. platforms). Each product usually has its own dedicated pagewith relevant information. `}\r\n                    </p>\r\n                </div>\r\n            }\r\n            {\r\n                selectedProduct.reveiws && selectedProduct.reveiws.length && active === \"reviews\"\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductReviews","import React, { useState, useEffect, useContext } from 'react';\r\n\r\n// context\r\nimport { ShopContext } from \"../../assets/context/ShopContext\"\r\nimport HeaderCollection from '../../components/Collection/HeaderCollection';\r\nimport CustomeCarousel from '../../components/CustomeCarousel';\r\n\r\nfunction RelatedProducts({ selectedProduct }) {\r\n\r\n    const shopData = useContext(ShopContext).products;\r\n\r\n    const [relatedProducts, setRelatedProducts] = useState([]);\r\n    \r\n    const make_relatedList = () => {\r\n        let company = selectedProduct.productData.company[0];\r\n        const relatedList = [];\r\n        for(let item of shopData) {\r\n            if(item.company[0].name === company.name && selectedProduct.productData._id !== item._id) {\r\n                relatedList.push(item);\r\n            }\r\n        }\r\n        setRelatedProducts([...relatedList]);\r\n    }\r\n\r\n    useEffect(() => {\r\n      make_relatedList();\r\n    }, [])\r\n\r\n    return (\r\n        <section className='mt-30'>\r\n            {\r\n                relatedProducts.length \r\n                ?\r\n                    <>\r\n                        <HeaderCollection \r\n                            text1={\"More of\"}\r\n                            text2={selectedProduct.productData.company[0].name}\r\n                        />\r\n\r\n                        <CustomeCarousel\r\n                            list={relatedProducts}\r\n                        />\r\n                    </>\r\n\r\n\r\n                :\r\n                    \"\"\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RelatedProducts","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { ShopContext } from \"../../assets/context/ShopContext\";\r\n\r\n// components\r\nimport Loading from \"../../components/Loading\";\r\nimport Container from \"../../components/Container\";\r\nimport ProductPlatorm from './ProductPlatorm';\r\nimport ProductInfo from './ProductInfo';\r\nimport AddToCartProduct from './AddToCartProduct';\r\nimport ProductReviews from './ProductReviews';\r\nimport RelatedProducts from './RelatedProducts';\r\n\r\nfunction Product() {\r\n\r\n  const { productId } = useParams();\r\n\r\n  // -------------------------- Context -------------------------- //\r\n  const { products, currencies } = useContext(ShopContext) || {};\r\n\r\n  // -------------------------- State -------------------------- //\r\n  const [selectedProduct, setSelectedProduct] = useState({\r\n    productData: null,\r\n    platforms: null,\r\n    selectedPLatforms: [],\r\n    itemNumber: 0\r\n  })\r\n\r\n  // -------------------------- State -------------------------- //\r\n  const fetchProductData = async () => {\r\n    const newSelected = {...selectedProduct};\r\n    setTimeout(() => {\r\n      for(let item of products) {\r\n        if(item._id == productId) {\r\n          newSelected.productData = item;\r\n          setSelectedProduct({...newSelected})\r\n          return;\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  // -------------------------- Effects -------------------------- //\r\n  useEffect(() => {\r\n    if(products) {\r\n      fetchProductData();\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        selectedProduct.productData\r\n        ?\r\n          <Container>\r\n            <div className='productBox pt-10 transition-opacity ease-in ducration-500 opacity-100 flex'>\r\n              <div className='productBox_imgBox imgRatio'>\r\n                <div>\r\n                  <img className='w-full h-auto' src={selectedProduct.productData.pic} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex-1 productBox_DataBox\">\r\n                <ProductInfo currencies={currencies} productData={selectedProduct.productData} />\r\n                <ProductPlatorm selectedProduct={selectedProduct} setSelectedProduct={setSelectedProduct} />\r\n                <AddToCartProduct selectedProduct={selectedProduct} setSelectedProduct={setSelectedProduct} />\r\n              </div>\r\n\r\n            </div>\r\n            <ProductReviews selectedProduct={selectedProduct} />\r\n            \r\n            <RelatedProducts selectedProduct={selectedProduct} />\r\n            \r\n          </Container>\r\n        :\r\n          <div className='flex justify-center items-center minH500'>\r\n            <Loading />\r\n          </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Product","export const numberValidity = (input, maxNumber) => {\r\n    if(Boolean(Number(input)) && Number(input) > 0 ){\r\n        if(Number(input) <= maxNumber) {\r\n            return {\r\n                status: true\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                status: false,\r\n                text: `There are only ${maxNumber} items available.`\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            status: false,\r\n            text: \"Please Enter a Correct Number\"\r\n        };\r\n    }\r\n}"],"names":["_jsx","className","_ref","selectedProduct","setSelectedProduct","useEffect","prepareList","newSelected","newList","item","productData","platforms","name","selected","_jsxs","children","Object","entries","map","platform","onClick","clickedItem","selectedPLatforms","push","platformClickHandler","_id","currencies","_Fragment","Array","from","length","stars","star","index","src","starIcon","uk","sign","price","description","navigate","useNavigate","routesList","useContext","RouteContext","inCartItems","updateInCart","setLocalItems","InCartContext","showAddToCart","setShowAddToCart","useState","updateCartList","newInCartItems","product","number","itemNumber","doAfterAdd","toast","success","selfDestruction","cart","url","checkShowCart","platformSelected","Boolean","addToCartHandler","error","onChange","e","isValid","numberValidity","target","value","availabe","status","Number","text","placeholder","type","active","setActive","reveiws","shopData","ShopContext","products","relatedProducts","setRelatedProducts","make_relatedList","company","relatedList","HeaderCollection","text1","text2","CustomeCarousel","list","productId","useParams","async","setTimeout","fetchProductData","Container","pic","ProductInfo","ProductPlatorm","AddToCartProduct","ProductReviews","RelatedProducts","Loading","input","maxNumber"],"sourceRoot":""}