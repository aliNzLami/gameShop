{"version":3,"file":"static/js/380.7acc0fbb.chunk.js","mappings":"6MAkCA,QAhCA,SAA0BA,GAAyC,IAAxC,MAAEC,EAAK,KAAEC,EAAI,WAAEC,EAAU,SAAEC,GAAUJ,EAE5D,OACIK,EAAAA,EAAAA,MAAA,OAAKC,UAAW,+DAA8DH,EAAa,GAAK,UAAWI,SAAA,EACvGC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2BAA0BC,SACjCN,KAENO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAAsDC,SAE7DE,OAAOC,QAAQR,GAAMS,IAAKC,IAKlBP,EAAAA,EAAAA,MAAA,KAAiBC,UAAU,oCAAmCC,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,MAAMO,KAAK,WAAWC,MAAOF,EAAK,GAAIG,GAAIH,EAAK,GAAIR,SAAWU,GAAUV,EAAS,CAAEY,KAAMF,EAAMG,OAAOF,GAAKG,QAASJ,EAAMG,OAAOC,aAClJb,EAAAA,EAAAA,MAAA,SAAOc,QAASP,EAAK,GAAIN,UAAU,iCAAgCC,SAAA,EAC/DF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,eAAcC,SAAA,CAAC,IAAGK,EAAK,GAAGQ,cAAe,OAErDR,EAAK,KACLJ,EAAAA,EAAAA,KAAA,OAAKa,IAAKT,EAAK,GAAIU,IAAI,GAAGhB,UAAU,qBANxCM,EAAK,SAgBzC,E,kCCEA,QA7BA,SAAyBZ,GAAuJ,IAAtJ,MAAEuB,EAAK,MAAEC,EAAK,YAAEC,EAAc,qFAAoF,YAAEC,EAAW,UAAEC,GAAY,GAAM3B,EAEzK,MAAM4B,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAE5B,OACIzB,EAAAA,EAAAA,MAAA,OAAKC,UAAW,oBAAoBqB,GAAa,UAAUpB,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACjCC,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAACR,MAAOA,EAAOC,MAAOA,OAEhChB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,+EAA8EC,SACrFkB,QAIVjB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8EAA8E,cAAY,iBAAgBC,SAEjHmB,EAAYM,QACZN,EAAYf,IAAKC,IACbJ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACyB,EAAAA,EAAW,CAACC,YAAatB,EAAMuB,WAAYP,EAASO,cAD/CvB,EAAKwB,UAQvC,ECmUA,QA/UA,WAGE,MAAMR,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAAgB,CAAC,GACvC,cAAEO,IAAkBR,EAAAA,EAAAA,YAAWS,EAAAA,IAAmB,CAAC,EAIjDC,EAAe,CACnBC,KAAMC,EAAAA,EAAUD,KAAKE,KACrBC,YAAaF,EAAAA,EAAUG,IAAIF,KAC3BG,QAASJ,EAAAA,EAAUI,QAAQH,KAC3BI,IAAKL,EAAAA,EAAUK,IAAIJ,KACnBK,MAAON,EAAAA,EAAUM,MAAML,KACvBM,QAASP,EAAAA,EAAUO,QAAQN,KAC3BO,IAAKR,EAAAA,EAAUQ,IAAIP,KACnBQ,SAAUT,EAAAA,EAAUU,WAAWT,MAU3BU,EAAgB,CACpBC,GAAIC,EAAAA,EAAUD,GAAGE,IACjBC,MAAOF,EAAAA,EAAUE,MAAMD,IACvBE,QAASH,EAAAA,EAAUG,QAAQF,IAC3BG,OAAQJ,EAAAA,EAAUI,OAAOH,IACzBI,OAAQL,EAAAA,EAAUK,OAAOJ,IACzBK,GAAIN,EAAAA,EAAUM,GAAGL,IACjBM,OAAQP,EAAAA,EAAUO,OAAON,KAGrBO,EAAgB,CACpB,MAASC,EAAAA,EAAUC,MAAMtB,KACzB,QAAWqB,EAAAA,EAAUE,QAAQvB,KAC7B,cAAeqB,EAAAA,EAAUG,OAAOxB,KAChC,OAAUqB,EAAAA,EAAUI,OAAOzB,KAC3B,GAAMqB,EAAAA,EAAUK,GAAG1B,KACnB,cAAeqB,EAAAA,EAAUM,WAAW3B,KACpC,KAAQqB,EAAAA,EAAUO,KAAK5B,KACvB,OAAUqB,EAAAA,EAAUQ,OAAO7B,KAC3B,cAAeqB,EAAAA,EAAUS,IAAI9B,KAC7B,WAAcqB,EAAAA,EAAUU,WAAW/B,OAK7BvC,EAAYuE,IAAkBC,EAAAA,EAAAA,UAASC,OAAOC,WAAa,MAC3DC,EAAiBC,IAAwBJ,EAAAA,EAAAA,UAAS,KAElDK,EAASC,IAAeN,EAAAA,EAAAA,UAAS,CACvCvB,cAAe,GACfX,UAAW,GACXsB,UAAW,GACXmB,OAAQ,GACRC,QAAQ,EACRC,WAAY,OAKRC,EAA2BvE,IAC/B,MAAMwE,EAAa,IAAIN,GACjBO,EAAQD,EAAWxE,EAAMyE,OACzBvE,EAAOF,EAAME,KACbwE,EAAQD,EAAME,QAAQzE,GAEzBF,EAAMI,QACHqE,EAAMG,SAAS1E,IACjBuE,EAAMI,KAAK3E,GAIbuE,EAAMK,OAAOJ,EAAO,GAEtBP,EAAW,IAAIK,KAcXO,EAAeA,KACnB,IAAIC,EAA0B,GAC1BC,EAAuB,GACvBC,EAAwB,GACxBC,EAAsB,GACtBC,EAAyB,GAEzBC,EAAkB,GAEtB,GAAGnB,EAAQ5B,cAAcpB,OAAQ,CAC/B,MAAMoE,EAAWC,IACjBP,EAA0B,IAAI,IAAIQ,IAAIF,GACxC,CACA,GAAGpB,EAAQvC,UAAUT,OAAQ,CAC3B,MAAMoE,EAAWG,IACjBR,EAAuB,IAAI,IAAIO,IAAIF,GACrC,CACA,GAAGpB,EAAQE,OAAOlD,OAAQ,CACxB,MAAMoE,EAAWI,IACjBP,EAAsB,IAAI,IAAIK,IAAIF,GACpC,CACA,GAAGpB,EAAQjB,UAAU/B,OAAQ,CAC3B,MAAMoE,EAAWK,IACjBT,EAAwB,IAAI,IAAIM,IAAIF,GACtC,CAEA,GAAGpB,EAAQG,OAAQ,CACjB,MAAMiB,EAAWM,IACjBR,EAAyB,IAAI,IAAII,IAAIF,GACvC,CACA,GAAGpB,EAAQI,WAAY,CACrB,MAAMgB,EAAWO,IACjBT,EAAyB,IAAI,IAAII,IAAIF,GACvC,CAEAD,EAAkB,IACbL,KACAC,KACAE,KACAD,KACAE,KAEAC,GAGFA,EAAgBnE,OACjB+C,EAAoB,IAAI,IAAIuB,IAAIH,KAG7BvE,EAASgF,UAAU7B,EAAoB,IAAInD,EAASgF,YAKrDP,EAA2BA,KAC/B,MAAMQ,EAAc,GAQpB,MAPA,IAAIjF,EAASgF,UAAUjG,IAAIC,IACzBA,EAAKkG,QAAQnG,IAAIoG,IACZ/B,EAAQ5B,cAAcsC,SAASqB,EAAY/F,OAC1C6F,EAAYlB,KAAK/E,OAIlBiG,GAGHN,EAAyBA,KAC7B,MAAMM,EAAc,GAEpB,IAAI,IAAIjG,IAAQ,IAAIgB,EAASgF,UAC3B,IAAI,IAAII,KAAgBpG,EAAK6B,UACxBuC,EAAQvC,UAAUiD,SAASsB,EAAaC,SACzCJ,EAAYlB,KAAK/E,GAMvB,OAAOiG,GAGHL,EAAsBA,KAC1B,MAAMK,EAAc,GACpB,IAAI,IAAIjG,IAAQ,IAAIgB,EAASgF,UACxBhG,EAAKsG,KAAO,KACVlC,EAAQE,OAAOQ,SAAS,QACzBmB,EAAYlB,KAAK/E,GAGlBA,EAAKsG,KAAO,MAAQtG,EAAKsG,KAAO,MAC9BlC,EAAQE,OAAOQ,SAAS,UACzBmB,EAAYlB,KAAK/E,GAGlBA,EAAKsG,KAAO,MAAQtG,EAAKsG,KAAO,MAC9BlC,EAAQE,OAAOQ,SAAS,UACzBmB,EAAYlB,KAAK/E,GAGlBA,EAAKsG,KAAO,MACVlC,EAAQE,OAAOQ,SAAS,UACzBmB,EAAYlB,KAAK/E,GAKvB,OAAOiG,GAGHJ,EAAuBA,KAC3B,MAAMI,EAAc,GAEpB,IAAI,IAAIjG,IAAQ,IAAIgB,EAASgF,UAC3B,IAAI,IAAIO,KAAevG,EAAKwG,QACvBpC,EAAQjB,UAAU2B,SAASyB,EAAYE,aACxCR,EAAYlB,KAAK/E,GAKvB,OAAOiG,GAGHF,EAA0BA,KAC9B,MAAME,EAAc,GACpB,IAAI,IAAIjG,IAAQ,IAAIgB,EAASgF,UACxBhG,EAAKwE,YACNyB,EAAYlB,KAAK/E,GAIrB,OAAOiG,GAGHH,EAAsBA,IACN9E,EAASgF,SAASU,MAAM,EAAG,IAiCjD,OAbAC,EAAAA,EAAAA,WAAU,KACL3F,EAASgF,UAAU7B,EAAoB,IAAInD,EAASgF,YACtD,KAEHW,EAAAA,EAAAA,WAAU,KACR1B,KACC,CAACb,KAEJuC,EAAAA,EAAAA,WAAU,KAxBYC,MACpB,MAAMC,EAAc,GAIpB,GAHIpF,GACFwD,IAECxD,GAAiBA,EAAcL,OAAS,EAAG,CAC5C,IAAI,IAAIpB,KAAQkE,EACXA,EAAgBlE,GAAMI,KAAK0G,cAAchC,SAASrD,EAAcqF,gBACjED,EAAY9B,KAAKb,EAAgBlE,IAGrCmE,EAAoB,IAAI0C,GAC1B,GAaAD,IACC,CAACnF,KAIF7B,EAAAA,EAAAA,KAACmH,EAAAA,EAAS,CAAApH,UAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sDAAsDsH,QAASA,IAAMlD,GAAevE,GAAYI,SAAA,CAAC,WAE5GC,EAAAA,EAAAA,KAAA,OAAKa,I,y2GAAiBf,UAAW,gBAAeH,EAAa,cAAgB,qBAG7EK,EAAAA,EAAAA,KAACqH,EAAiB,CAChB5H,MAAO,gBACPC,KAAMkD,EACNjD,WAAYA,EACZC,SAAWU,GAAUuE,EAAwB,IAAKvE,EAAOyE,MAAO,qBAGlE/E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,KAACqH,EAAiB,CAChB5H,MAAO,YACPC,KAAMqC,EACNpC,WAAYA,EACZC,SAAWU,GAAUuE,EAAwB,IAAKvE,EAAOyE,MAAO,mBAIpE/E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,KAACqH,EAAiB,CAChB5H,MAAO,YACPC,KAAM4D,EACN3D,WAAYA,EACZC,SAAWU,GAAUuE,EAAwB,IAAKvE,EAAOyE,MAAO,mBAIpE/E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,KAACqH,EAAiB,CAChB5H,MAAO,SACPC,KAxRK,CACjB,MAAO,GACP,QAAS,GACT,QAAS,GACT,QAAS,IAqRGC,WAAYA,EACZC,SAAWU,GAAUuE,EAAwB,IAAKvE,EAAOyE,MAAO,gBAIpE/E,EAAAA,EAAAA,KAACqH,EAAiB,CAChB5H,MAAO,SACPC,KAAM,CAAC,cAAe,GAAI,OAAU,IACpCC,WAAYA,EACZC,SAAWU,GAlOQA,KACX,gBAAfA,EAAME,MACPiE,EAAW6C,IAAI,IAAUA,EAAM1C,aAAYtE,EAAMI,SAAiB,QAGlD,WAAfJ,EAAME,MACPiE,EAAW6C,IAAI,IAAUA,EAAM3C,OAAQrE,EAAMI,YA4NhB6G,CAAsBjH,QAK/CgE,EAAgB9C,QAEdxB,EAAAA,EAAAA,KAAA,OAAK,cAAY,iBAAiBF,UAAU,iBAAgBC,UACxDC,EAAAA,EAAAA,KAACwH,EAAgB,CACfzG,MAAO,MACPC,MAAO,gBAAgBsD,EAAgB9C,UACvCN,YAAaoD,EACbnD,WAAW,OAIjBnB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,cAAaC,SACvB,GAAG8B,8BAOpB,C","sources":["pages/Collection/FilterCollections.jsx","components/Collection/CustomCollection.jsx","pages/Collection/Collection.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction FilterCollections({ title, list, showFilter, onChange }) {\r\n\r\n    return (\r\n        <div className={`filterbox_collection border border-gray-300 pl-5 py-3 my-5 ${showFilter ? '' : 'hidden'}`}>\r\n            <p className='mb-3 text-sm font-medium'>\r\n                { title }\r\n            </p>\r\n            <div className=\"flex flex-col gap-2 text-sm font-light text-gray-700\">\r\n                {\r\n                    Object.entries(list).map( item => {\r\n                        // item[0] --> name\r\n                        // item[1] --> img src\r\n\r\n                        return (\r\n                            <p key={item[0]} className='flex items-center flex-gap-2 my-4'>\r\n                                <input className='w-3' type=\"checkbox\" value={item[0]} id={item[0]} onChange={(value) => onChange({ name: value.target.id , checked: value.target.checked })}/>\r\n                                <label htmlFor={item[0]} className='block w-full flex items-center'>\r\n                                    <span className='mx-4 text-14'> { item[0].toUpperCase() } </span>\r\n                                    {\r\n                                        item[1] &&\r\n                                        <img src={item[1]} alt=\"\" className='filterIcons' /> \r\n                                    }\r\n                                </label>\r\n                            </p>\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterCollections","import React, { useContext, useState, useEffect } from 'react'\r\nimport { ShopContext } from \"../../assets/context/ShopContext\"\r\nimport Title from \"./Title\";\r\nimport ProductCard from \"./ProductCard\"\r\n\r\nfunction CustomCollection({ text1, text2, description = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus quod perferendis\", productList, marginTop = true }) {\r\n\r\n    const shopData = useContext(ShopContext);\r\n    \r\n    return (\r\n        <div className={`collectionHolder ${marginTop && 'mt-20'}`}>\r\n            <div className=\"showSmoothly\">\r\n                <div className='text-center text-3xl'>\r\n                    <Title text1={text1} text2={text2} />\r\n                </div>\r\n                <p className='w-3/4 m-auto text-18 sm:text-sm md:text-base text-gray-400 text-center mb-15'>\r\n                    { description }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 gap-y-6\" data-testid='productsHolder'>\r\n                {\r\n                    productList.length &&\r\n                    productList.map((item) => \r\n                        <div key={item._id}>\r\n                            <ProductCard productItem={item} currencies={shopData.currencies} />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomCollection","import React, { useContext, useState, useEffect } from 'react'\r\n\r\n// context\r\nimport { ShopContext } from \"../../assets/context/ShopContext\"\r\nimport { SearchContext } from '../../assets/context/SearchContext';\r\n\r\n// icon\r\nimport arrowRight from \"../../assets/icons/iconPics/arrowRight.png\"\r\n\r\n// filter lists\r\nimport { countries } from '../../assets/icons/countries';\r\nimport { platforms } from '../../assets/icons/platforms';\r\nimport { companies } from '../../assets/icons/companies';\r\n\r\n// components\r\nimport FilterCollections from './FilterCollections';\r\nimport Container from \"../../components/Container\";\r\nimport CustomCollection from '../../components/Collection/CustomCollection';\r\n\r\n\r\nfunction Collection() {\r\n\r\n  // ---------------------------------------------- Context\r\n  const shopData = useContext(ShopContext) || {};\r\n  const { searchContent } = useContext(SearchContext) ||  {};\r\n  \r\n  // ---------------------------------------------- Variables\r\n\r\n    const platformList = {\r\n      xbox: platforms.xbox.icon,\r\n      playStation: platforms.ps1.icon,\r\n      windows: platforms.windows.icon,\r\n      mac: platforms.mac.icon,\r\n      linux: platforms.linux.icon,\r\n      android: platforms.android.icon,\r\n      ios: platforms.ios.icon,\r\n      nintendo: platforms.nintendo64.icon,\r\n    }\r\n    \r\n    const decadeList = {\r\n      \"90s\": \"\",\r\n      \"2000s\": \"\",\r\n      \"2010s\": \"\",\r\n      \"2020s\": \"\",\r\n    }\r\n\r\n    const nationalities = {\r\n      us: countries.us.pic,\r\n      japan: countries.japan.pic,\r\n      finland: countries.finland.pic,\r\n      france: countries.france.pic, \r\n      canada: countries.canada.pic,\r\n      uk: countries.uk.pic,\r\n      poland: countries.poland.pic,\r\n    }\r\n\r\n    const companiesList = {\r\n      \"Namco\": companies.namco.icon,\r\n      \"Ubisoft\": companies.ubisoft.icon,\r\n      \"Warner Bros\": companies.warner.icon,\r\n      \"Remedy\": companies.remedy.icon,\r\n      \"EA\": companies.ea.icon,\r\n      \"Square Enix\": companies.squareEnix.icon,\r\n      \"Sony\": companies.sony.icon,\r\n      \"Capcom\": companies.capcom.icon,\r\n      \"CD Projeckt\": companies.CDP.icon,\r\n      \"Activision\": companies.activision.icon,\r\n    }\r\n\r\n    // ---------------------------------------------- States\r\n\r\n    const [ showFilter, setShowFilter ] = useState(window.innerWidth > 767 ? true : false);\r\n    const [ filteredProduct, setFilteredProducts ] = useState([]);\r\n    \r\n    const [ filters, setFilters ] = useState({\r\n      nationalities: [],\r\n      platforms: [],\r\n      companies: [],\r\n      decade: [],\r\n      latest: false,\r\n      bestSeller: null\r\n    });\r\n\r\n    // ---------------------------------------------- Functions\r\n\r\n    const onChangeCheckBoxHandler = (value) => {\r\n      const newFilters = {...filters};\r\n      const group = newFilters[value.group];\r\n      const name = value.name;\r\n      const index = group.indexOf(name)\r\n\r\n      if(value.checked) {\r\n        if(!group.includes(name)) {\r\n          group.push(name) \r\n        }\r\n      }\r\n      else {\r\n        group.splice(index, 1) \r\n      }\r\n      setFilters({...newFilters});\r\n      \r\n    }\r\n\r\n    const onChangeToggleHandler = (value) => {\r\n      if(value.name === \"Best Seller\") {\r\n        setFilters(prev => ({ ...prev, bestSeller: value.checked ? true : null }))\r\n\r\n      }\r\n      if(value.name === \"Latest\") {\r\n        setFilters(prev => ({ ...prev, latest: value.checked }))\r\n      }\r\n    }\r\n\r\n    const applyFilters = () => {\r\n      let newProducts_nationality = [];\r\n      let newProducts_platform = [];\r\n      let newProducts_companies = [];\r\n      let newProducts_decades = [];\r\n      let newProducts_bestSeller = [];\r\n      let newProducts_latest = [];\r\n      let newProducts_all = [];\r\n\r\n      if(filters.nationalities.length) {\r\n        const filtered = apply_nationality_filter();\r\n        newProducts_nationality = [...new Set(filtered)];  \r\n      }\r\n      if(filters.platforms.length) {\r\n        const filtered = apply_platforms_filter();\r\n        newProducts_platform = [...new Set(filtered)];\r\n      }\r\n      if(filters.decade.length) {\r\n        const filtered = apply_decade_filter();\r\n        newProducts_decades = [...new Set(filtered)];\r\n      }\r\n      if(filters.companies.length) {\r\n        const filtered = apply_company_filter();\r\n        newProducts_companies = [...new Set(filtered)];\r\n      }\r\n      \r\n      if(filters.latest) {\r\n        const filtered = apply_latest_filter();\r\n        newProducts_bestSeller = [...new Set(filtered)];\r\n      }\r\n      if(filters.bestSeller) {\r\n        const filtered = apply_bestSeller_filter();\r\n        newProducts_bestSeller = [...new Set(filtered)];\r\n      }\r\n      \r\n      newProducts_all = [\r\n        ...newProducts_nationality,\r\n        ...newProducts_platform,\r\n        ...newProducts_decades,\r\n        ...newProducts_companies,\r\n        ...newProducts_bestSeller,\r\n        ...newProducts_latest,\r\n        ...newProducts_all\r\n      ]\r\n\r\n      if(newProducts_all.length) {\r\n        setFilteredProducts([...new Set(newProducts_all)]);\r\n      }\r\n      else {\r\n        if(shopData.products) setFilteredProducts([...shopData.products]);\r\n      }\r\n      \r\n    }\r\n\r\n    const apply_nationality_filter = () => {\r\n      const newFiltered = [];\r\n      [...shopData.products].map(item => {\r\n        item.country.map(itemCountry => {\r\n          if(filters.nationalities.includes(itemCountry.name)) {\r\n              newFiltered.push(item);\r\n          }\r\n        })\r\n      })\r\n      return newFiltered;\r\n    }\r\n\r\n    const apply_platforms_filter = () => {\r\n      const newFiltered = [];\r\n\r\n      for(let item of [...shopData.products]) {\r\n        for(let itemPlatform of item.platforms) {\r\n          if(filters.platforms.includes(itemPlatform.nature)) {\r\n            newFiltered.push(item);\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n\r\n      return newFiltered;\r\n    }\r\n\r\n    const apply_decade_filter = () => {\r\n      const newFiltered = [];\r\n      for(let item of [...shopData.products]) {\r\n        if(item.year < 2000) {\r\n          if(filters.decade.includes(\"90s\")){\r\n            newFiltered.push(item);\r\n          } \r\n        }\r\n        if(item.year < 2010 && item.year > 1999) {\r\n          if(filters.decade.includes(\"2000s\")){\r\n            newFiltered.push(item);\r\n          } \r\n        }\r\n        if(item.year < 2020 && item.year > 2009) {\r\n          if(filters.decade.includes(\"2010s\")){\r\n            newFiltered.push(item);\r\n          } \r\n        }\r\n        if(item.year > 2019) {\r\n          if(filters.decade.includes(\"2020s\")){\r\n            newFiltered.push(item);\r\n          } \r\n        }\r\n      }\r\n\r\n      return newFiltered;\r\n    }\r\n\r\n    const apply_company_filter = () => {\r\n      const newFiltered = [];\r\n\r\n      for(let item of [...shopData.products]) {\r\n        for(let itemCompany of item.company) {\r\n          if(filters.companies.includes(itemCompany.filterName)) {\r\n            newFiltered.push(item);\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      return newFiltered;\r\n    }\r\n\r\n    const apply_bestSeller_filter = () => {\r\n      const newFiltered = [];\r\n      for(let item of [...shopData.products]) {\r\n        if(item.bestSeller) {\r\n          newFiltered.push(item);\r\n        }\r\n      }\r\n\r\n      return newFiltered;\r\n    }\r\n\r\n    const apply_latest_filter = () => {\r\n      const newFiltered = shopData.products.slice(0, 15);\r\n      return newFiltered;\r\n    }\r\n\r\n    const searchHandler = () => {\r\n      const newProducts = [];\r\n      if(!searchContent) {\r\n        applyFilters();\r\n      }\r\n      if(searchContent && searchContent.length > 2) {\r\n        for(let item in filteredProduct) {\r\n          if(filteredProduct[item].name.toLowerCase().includes(searchContent.toLowerCase())) {\r\n            newProducts.push(filteredProduct[item]);\r\n          }\r\n        }\r\n        setFilteredProducts([...newProducts])\r\n      }\r\n    }\r\n\r\n    // ---------------------------------------------- Effects\r\n    useEffect(() => {\r\n      if(shopData.products) setFilteredProducts([...shopData.products]);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      applyFilters()\r\n    }, [filters])\r\n\r\n    useEffect(() => {\r\n      searchHandler();\r\n    }, [searchContent])\r\n\r\n    \r\n    return (\r\n      <Container>\r\n\r\n        <div className='flex flex-col md:flex-row gap-1 sm:gap-10 pt-10'>\r\n          <div className=\"min-w-60\">\r\n            <p className='my-2 text-xl flex items-center cursor-pointer gap-2' onClick={() => setShowFilter(!showFilter)}>\r\n              FILTERS\r\n              <img src={arrowRight} className={`arrowFilter ${showFilter ? 'arrowRotate' : 'arrowStable' }`} />\r\n            </p>\r\n\r\n              <FilterCollections \r\n                title={\"NATIONALITIES\"}\r\n                list={nationalities}\r\n                showFilter={showFilter}\r\n                onChange={(value) => onChangeCheckBoxHandler({ ...value, group: \"nationalities\" })}\r\n              />\r\n\r\n              <div className='mt-10'>\r\n                <FilterCollections \r\n                  title={\"PLATFORMS\"}\r\n                  list={platformList}\r\n                  showFilter={showFilter}\r\n                  onChange={(value) => onChangeCheckBoxHandler({ ...value, group: \"platforms\" })}\r\n                />\r\n              </div>\r\n\r\n              <div className='my-10'>\r\n                <FilterCollections \r\n                  title={\"COMPANIES\"}\r\n                  list={companiesList}\r\n                  showFilter={showFilter}\r\n                  onChange={(value) => onChangeCheckBoxHandler({ ...value, group: \"companies\" })}\r\n                />\r\n              </div>\r\n\r\n              <div className='mb-10'>\r\n                <FilterCollections \r\n                  title={\"DECADE\"}\r\n                  list={decadeList}\r\n                  showFilter={showFilter}\r\n                  onChange={(value) => onChangeCheckBoxHandler({ ...value, group: \"decade\" })}\r\n                />\r\n              </div>\r\n\r\n              <FilterCollections \r\n                title={\"OTHERS\"}\r\n                list={{\"Best Seller\": \"\", \"Latest\": \"\"}}\r\n                showFilter={showFilter}\r\n                onChange={(value) => onChangeToggleHandler(value)}\r\n              />\r\n          </div>\r\n\r\n          {\r\n            filteredProduct.length\r\n            ?\r\n              <div data-testid='allCollectoins' className='allCollections'>\r\n                  <CustomCollection \r\n                    text1={'ALL'} \r\n                    text2={`COLLECTIONS (${filteredProduct.length})`}\r\n                    productList={filteredProduct}\r\n                    marginTop={false}\r\n                  />\r\n              </div>\r\n            :\r\n              <p className='noFoundItem'>\r\n                {`${searchContent} have not been found`}\r\n              </p>\r\n          }\r\n\r\n        </div>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Collection"],"names":["_ref","title","list","showFilter","onChange","_jsxs","className","children","_jsx","Object","entries","map","item","type","value","id","name","target","checked","htmlFor","toUpperCase","src","alt","text1","text2","description","productList","marginTop","shopData","useContext","ShopContext","Title","length","ProductCard","productItem","currencies","_id","searchContent","SearchContext","platformList","xbox","platforms","icon","playStation","ps1","windows","mac","linux","android","ios","nintendo","nintendo64","nationalities","us","countries","pic","japan","finland","france","canada","uk","poland","companiesList","companies","namco","ubisoft","warner","remedy","ea","squareEnix","sony","capcom","CDP","activision","setShowFilter","useState","window","innerWidth","filteredProduct","setFilteredProducts","filters","setFilters","decade","latest","bestSeller","onChangeCheckBoxHandler","newFilters","group","index","indexOf","includes","push","splice","applyFilters","newProducts_nationality","newProducts_platform","newProducts_companies","newProducts_decades","newProducts_bestSeller","newProducts_all","filtered","apply_nationality_filter","Set","apply_platforms_filter","apply_decade_filter","apply_company_filter","apply_latest_filter","apply_bestSeller_filter","products","newFiltered","country","itemCountry","itemPlatform","nature","year","itemCompany","company","filterName","slice","useEffect","searchHandler","newProducts","toLowerCase","Container","onClick","FilterCollections","prev","onChangeToggleHandler","CustomCollection"],"sourceRoot":""}