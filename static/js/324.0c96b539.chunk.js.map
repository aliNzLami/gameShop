{"version":3,"file":"static/js/324.0c96b539.chunk.js","mappings":"oHAAO,MAAMA,EAAiBC,GACvBC,QAAQC,OAAOF,KAAWE,OAAOF,GAAS,EACtCA,EAAMG,OAAS,GACP,CACHC,QAAQ,EACRC,KAAM,+CAUX,CACHD,QAAQ,GAND,CACHA,QAAQ,EACRC,KAAM,sC,8GC4JlB,QA3JA,WAEI,MAAM,QAAEC,EAAO,gBAAEC,EAAe,cAAEC,IAAkBC,EAAAA,EAAAA,YAAWC,EAAAA,IAAmB,CAAC,GAmD5EC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,CACvCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,QAAS,GACTC,MAAO,MAGJC,EAASC,IAAcX,EAAAA,EAAAA,WAAS,GAiDvC,OAVAY,EAAAA,EAAAA,WAAU,KArCSC,MACjB,MAAMC,EAAe,IAAIhB,GACzB,IAAI,IAAIiB,KAAQtB,EACdqB,EAAaC,GAAQtB,EAAQsB,GAE/BhB,EAAa,IAAIe,KAiCjBD,IACC,CAACpB,KAEJmB,EAAAA,EAAAA,WAAU,KACLlB,GACDA,KAED,KAGCsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mGAAkGC,SAAA,EAC/GF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAC,aAGnCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6CApHC,CACrB,CACEG,GAAI,YACJC,YAAa,cAGf,CACED,GAAI,WACJC,YAAa,aAGf,CACED,GAAI,QACJC,YAAa,gBACbC,KAAM,SAGR,CACEF,GAAI,SACJC,YAAa,UAGf,CACED,GAAI,OACJC,YAAa,QAGf,CACED,GAAI,QACJC,YAAa,SAGf,CACID,GAAI,MACJC,YAAa,WAGjB,CACID,GAAI,UACJC,YAAa,WAGjB,CACID,GAAI,QACJC,YAAa,QACbC,KAAM,WA2EiBC,IAAIR,IAEfI,EAAAA,EAAAA,KAAA,SACEK,SAAWC,GApDVtC,KACnB,MAAM2B,EAAe,IAAIhB,GACzBgB,EAAa3B,EAAMuC,KAAOvC,EAAMwC,MAChC5B,EAAa,IAAIe,KAiDiBc,CAAY,CAACF,IAAKX,EAAKK,GAAIO,MAAOF,EAAEI,OAAOF,QAE3DL,KAAMP,EAAKO,KAAOP,EAAKO,KAAO,OAC9BL,UAAW,gCAA+BP,EAAU,eAAiB,mBACrEW,YAAaN,EAAKM,YAClBD,GAAIL,EAAKK,GACTU,UAAWpB,EACXqB,aAAcjC,EAAUiB,EAAKK,KANxBL,EAAKK,KAahBV,GAEES,EAAAA,EAAAA,KAAA,UAAQa,QAhDFC,KAdHC,MACjB,MAAMC,GAAaC,EAAAA,EAAAA,GAActC,EAAUK,OACrCkC,GAAanD,EAAAA,EAAAA,GAAcY,EAAUW,OAC3C,OAAI0B,EAAW5C,SAIX8C,EAAW9C,SACb+C,EAAAA,GAAMC,MAAMF,EAAW7C,OAChB,IALP8C,EAAAA,GAAMC,MAAMJ,EAAW3C,OAChB,IAUO0C,KAEdvC,EAAcG,GACda,GAAYD,GACZ4B,EAAAA,GAAME,QAAQ,sBA2C8BvB,UAAU,2DAA0DC,SAAC,YAIrGC,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAMrB,GAAYD,GAAUO,UAAU,2DAA2D,cAAY,cAAaC,SAAC,WAMhK,C,kCCtKO,MAAMkB,EAAiBjD,GACtBA,EAMEA,EAAMsD,SAAS,OAAStD,EAAMsD,SAAS,SAAWtD,EAAMsD,SAAS,SAAWtD,EAAMsD,SAAS,SAM1F,CACHlD,QAAQ,GAND,CACHA,QAAQ,EACRC,KAAM,yBARH,CACHD,QAAQ,EACRC,KAAM,iB","sources":["assets/helper/phoneValidity.js","pages/Profile/Profile.jsx","assets/helper/emailValidity.js"],"sourcesContent":["export const phoneValidity = (input) => {\r\n    if(Boolean(Number(input)) && Number(input) > 0 ){\r\n        if(input.length < 14) {\r\n            return {\r\n                status: false,\r\n                text: \"Phone Number Must Be at Least 14 Characters\"\r\n            }; \r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            status: false,\r\n            text: \"Please Enter a Correct Phone Number\"\r\n        };\r\n    }\r\n    return {\r\n        status: true\r\n    }\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\n\r\n// context\r\nimport { ProfileContext } from '../../assets/context/ProfileContext';\r\n\r\n// helper\r\nimport { emailValidity } from \"../../assets/helper/emailValidity\";\r\nimport { phoneValidity } from '../../assets/helper/phoneValidity';\r\n\r\n// component\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction Profile() {\r\n\r\n    const { profile, setLocalProfile, updateProfile } = useContext(ProfileContext) || {};\r\n\r\n    const profileContent = [\r\n      {\r\n        id: \"firstName\",\r\n        placeholder: \"First Name\"\r\n      },\r\n\r\n      {\r\n        id: \"lastName\",\r\n        placeholder: \"Last Name\"\r\n      },\r\n\r\n      {\r\n        id: \"email\",\r\n        placeholder: \"Email Address\",\r\n        type: \"email\"\r\n      },\r\n\r\n      {\r\n        id: \"street\",\r\n        placeholder: \"Street\"\r\n      },\r\n\r\n      {\r\n        id: \"city\",\r\n        placeholder: \"City\"\r\n      },\r\n\r\n      {\r\n        id: \"state\",\r\n        placeholder: \"State\"\r\n      },\r\n\r\n      {\r\n          id: \"zip\",\r\n          placeholder: \"Zipcode\"\r\n      },\r\n\r\n      {\r\n          id: \"country\",\r\n          placeholder: \"Country\"\r\n      },\r\n\r\n      {\r\n          id: \"phone\",\r\n          placeholder: \"Phone\",\r\n          type: \"number\"\r\n      },\r\n  ]\r\n\r\n    const [formState, setFormState] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        country: \"\",\r\n        phone: \"\"\r\n    })\r\n\r\n    const [canEdit, setCanEdit] = useState(false);\r\n\r\n    const updateForm = () => {\r\n      const newFormState = {...formState};\r\n      for(let item in profile) {\r\n        newFormState[item] = profile[item];\r\n      }\r\n      setFormState({...newFormState});\r\n    }\r\n\r\n    const editHandler = (input) => {\r\n      const newFormState = {...formState};\r\n      newFormState[input.key] = input.value;\r\n      setFormState({...newFormState});\r\n    }\r\n\r\n    const checkValid = () => {\r\n      const validEmail = emailValidity(formState.email);\r\n      const validPhone = phoneValidity(formState.phone);\r\n      if(!validEmail.status) {\r\n        toast.error(validEmail.text);\r\n        return false;\r\n      }\r\n      if(!validPhone.status) {\r\n        toast.error(validPhone.text);\r\n        return false;\r\n      }\r\n      return true\r\n    }\r\n\r\n    const submitHandler = () => {\r\n      const isValid = checkValid();\r\n      if(isValid) {\r\n        updateProfile(formState)\r\n        setCanEdit(!canEdit);\r\n        toast.success(\"Profile Updated.\")\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      updateForm();\r\n    }, [profile])\r\n    \r\n    useEffect(() => {\r\n      if(setLocalProfile) {\r\n        setLocalProfile();\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='flex flex-col justify-center items-center w-[90%] sm:max-w-96 m-auto gap-4 text-gray-800 minH500'>\r\n          <div className='inline-flex items-center gap-2 mb-2'>\r\n            <p className='prata-font text-3xl'>\r\n              Profile\r\n            </p>\r\n            <hr className='border-none h-[1.5px] w-8 bg-gray-800' />\r\n          </div>\r\n\r\n                {\r\n                  profileContent.map(item => {\r\n                    return (\r\n                      <input \r\n                        onChange={(e)=> editHandler({key: item.id, value: e.target.value})}\r\n                        key={item.id}\r\n                        type={item.type ? item.type : \"text\"}\r\n                        className={`w-full px-3 py-2 mainBorder ${canEdit ? \"canEditInput\" : \"canNotEditInput\"}`} \r\n                        placeholder={item.placeholder}\r\n                        id={item.id} \r\n                        disabled={!canEdit}\r\n                        defaultValue={formState[item.id]}\r\n                      />\r\n                    )\r\n                  })\r\n                }\r\n                \r\n                {\r\n                  canEdit\r\n                  ?\r\n                    <button onClick={submitHandler} className='mainPurpleBg text-white cursor-pointer px-4 py-2 rounded'>\r\n                      Submit\r\n                    </button>\r\n                  :\r\n                    <button onClick={() => setCanEdit(!canEdit)} className='mainPurpleBg text-white cursor-pointer px-4 py-2 rounded' data-testid='editProfile'>\r\n                      Edit\r\n                    </button>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","export const emailValidity = (input) => {\r\n    if(!input) {\r\n        return {\r\n            status: false,\r\n            text: \"Email is empty\"\r\n        };\r\n    }\r\n    if( !(input.includes(\"@\") && (input.includes(\".com\") || input.includes(\".org\") || input.includes(\".net\"))) ) {\r\n        return {\r\n            status: false,\r\n            text: \"Enter a Correct Email\"\r\n        };\r\n    }\r\n    return {\r\n        status: true,\r\n    };;\r\n}"],"names":["phoneValidity","input","Boolean","Number","length","status","text","profile","setLocalProfile","updateProfile","useContext","ProfileContext","formState","setFormState","useState","firstName","lastName","email","street","city","state","zip","country","phone","canEdit","setCanEdit","useEffect","updateForm","newFormState","item","_jsxs","className","children","_jsx","id","placeholder","type","map","onChange","e","key","value","editHandler","target","disabled","defaultValue","onClick","submitHandler","checkValid","validEmail","emailValidity","validPhone","toast","error","success","includes"],"sourceRoot":""}