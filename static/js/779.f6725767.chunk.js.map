{"version":3,"file":"static/js/779.f6725767.chunk.js","mappings":"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","sources":["assets/helper/phoneValidity.js","pages/Cart/TotalAmount.jsx","pages/Orders/OrderForm.jsx","pages/Orders/Orders.jsx","assets/helper/emailValidity.js"],"sourcesContent":["export const phoneValidity = (input) => {\r\n    if(Boolean(Number(input)) && Number(input) > 0 ){\r\n        if(input.length < 14) {\r\n            return {\r\n                status: false,\r\n                text: \"Phone Number Must Be at Least 14 Characters\"\r\n            }; \r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            status: false,\r\n            text: \"Please Enter a Correct Phone Number\"\r\n        };\r\n    }\r\n    return {\r\n        status: true\r\n    }\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\n\r\n// context\r\nimport { ShopContext } from '../../assets/context/ShopContext';\r\nimport { InCartContext } from '../../assets/context/InCartContext';\r\n\r\n// component\r\nimport Title from '../../components/Collection/Title';\r\n\r\n\r\nfunction TotalAmount( { navigateTitle, isValid, onClickBtn = () => {} } ) {\r\n\r\n\r\n    // ----------------------------------- Context ----------------------------------- //\r\n    const { currencies, delivery_fee } = useContext(ShopContext) || {};\r\n    const { inCartItems } = useContext(InCartContext) || {};\r\n\r\n\r\n    // ----------------------------------- State ----------------------------------- //\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const content = [\r\n        {\r\n           name: \"Subtotal\",\r\n           quantity:  total,\r\n        },\r\n        {\r\n            name: \"Shipping Fee\",\r\n            quantity:  delivery_fee,\r\n         },\r\n         {\r\n            name: \"Total\",\r\n            quantity:  total + delivery_fee,\r\n         },\r\n    ]\r\n\r\n    // ----------------------------------- Function ----------------------------------- //\r\n    const calculateTotal = () => {\r\n        if(inCartItems && inCartItems.length) {\r\n            let sum = 0;\r\n            for(let item of inCartItems) {\r\n                sum += Number(item.number) * Number(item.product.price)\r\n            }\r\n            setTotal(sum);\r\n        }\r\n    }\r\n\r\n    // ----------------------------------- Effect ----------------------------------- //\r\n    useEffect(() => {\r\n        calculateTotal();\r\n    }, [inCartItems])\r\n    \r\n    \r\n    return (\r\n        <div className='w-full'>\r\n            <div className=\"text-2xl\">\r\n                <Title text1='CART' text2='TOTALS' />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col gap-2 mt-2 text-sm\">\r\n                {\r\n                    content.map((item, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <div className=\"flex justify-between text-18\">\r\n                                    <p className={`${item.name === \"Total\" && \"font-bold\"}`}>\r\n                                        { item?.name??\"\" }\r\n                                    </p>\r\n                                    <p className={`${item.name === \"Total\" && \"font-bold\"}`}>\r\n                                        {\r\n                                            inCartItems && inCartItems.length\r\n                                            ?\r\n                                                `${currencies.uk.sign} ${item?.quantity??\"\"}`\r\n                                            :\r\n                                                0\r\n                                        }\r\n                                    </p>\r\n                                </div>\r\n                                {\r\n                                    index !== content.length -1 \r\n                                    &&\r\n                                    <hr />\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {\r\n                inCartItems && inCartItems.length\r\n                ?\r\n                    <div className=\"w-full text-end\">\r\n                        <button \r\n                            onClick={onClickBtn} \r\n                            className={`py-3 px-8 my-8 text-sm text-white cursor-pointer mainPurpleBg text-16 ${isValid ? \"\" : \"opacity-[0.5]\"}`}\r\n                            data-testid='proceedBtn'\r\n                            disabled={!isValid}\r\n                        >\r\n                            { navigateTitle }\r\n                        </button>\r\n                    </div>\r\n                :\r\n                    \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalAmount","import React, { useState } from 'react'\r\nimport Title from \"../../components/Collection/Title\";\r\n\r\nfunction OrderForm({ formState, setFormState }) {\r\n\r\n    const formConten = [\r\n        {\r\n          id: \"firstName\",\r\n          isFull: false,\r\n          label: \"First Name\"\r\n        },\r\n  \r\n        {\r\n          id: \"lastName\",\r\n          isFull: false,\r\n          label: \"Last Name\"\r\n        },\r\n  \r\n        {\r\n          id: \"email\",\r\n          isFull: true,\r\n          label: \"Email Address\",\r\n          type: \"email\"\r\n        },\r\n  \r\n        {\r\n          id: \"street\",\r\n          isFull: true,\r\n          label: \"Street\"\r\n        },\r\n  \r\n        {\r\n          id: \"city\",\r\n          isFull: false,\r\n          label: \"City\"\r\n        },\r\n  \r\n        {\r\n          id: \"state\",\r\n          isFull: false,\r\n          label: \"State\"\r\n        },\r\n\r\n        {\r\n            id: \"zip\",\r\n            isFull: false,\r\n            label: \"Zipcode\"\r\n        },\r\n\r\n        {\r\n            id: \"country\",\r\n            isFull: false,\r\n            label: \"Country\"\r\n        },\r\n\r\n        {\r\n            id: \"phone\",\r\n            isFull: true,\r\n            label: \"Phone\",\r\n            type: \"number\"\r\n        },\r\n    ]\r\n\r\n    const onChangeHandle = (input) => {\r\n        const newStates = {...formState};\r\n        newStates[input.key] = input.value;\r\n        setFormState({...newStates});\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <div className=\"flex flex-col gap-4 w-ful sm:max-w-[400px]\">\r\n            \r\n            <div className=\"text-xl sm:text-2xl my-3\">\r\n              <Title \r\n                text1='DELIVERY'\r\n                text2='INFORMATION'\r\n              />\r\n            </div>\r\n\r\n            <div className=\"max-w-3xl mx-auto\">\r\n              <form className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {\r\n                  formConten.map(item => {\r\n                    return (\r\n                      <div key={item.id} className={`flex flex-col ${ item.isFull ? \"md:col-span-2\" : \"\" }`}>\r\n                        <label htmlFor={item.id} className=\"text-sm font-medium\"> { item.label } </label>\r\n                        <input \r\n                            onChange={(e) => onChangeHandle({key: item.id, value: e.target.value})} \r\n                            type={item.type ? item.type : \"text\"} \r\n                            id={item.id} \r\n                            className=\"mt-1 p-2 border rounded\" \r\n                            defaultValue={formState[item.id]}\r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </form>\r\n            </div>\r\n\r\n          </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderForm","import React, { useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\n// helper\r\nimport { emailValidity } from \"../../assets/helper/emailValidity\";\r\nimport { phoneValidity } from '../../assets/helper/phoneValidity';\r\n\r\n// context\r\nimport { RouteContext } from '../../assets/context/RouteContext';\r\nimport { InCartContext } from '../../assets/context/InCartContext';\r\nimport { OrdersContext } from '../../assets/context/OrdersContext';\r\nimport { ProfileContext } from '../../assets/context/ProfileContext';\r\n\r\n// component\r\nimport Container from \"../../components/Container\";\r\nimport OrderForm from './OrderForm';\r\nimport TotalAmount from '../Cart/TotalAmount';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Orders() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // ---------------------------------- Context ---------------------------------- //\r\n    const { profile } = useContext(ProfileContext);\r\n    const routesList = useContext(RouteContext);\r\n    const { inCartItems, updateInCart } = useContext(InCartContext);\r\n    const { ordersList, setLocalOrders, updateOrdersList } = useContext(OrdersContext);\r\n\r\n    // ---------------------------------- States ---------------------------------- //\r\n    const [formState, setFormState] = useState({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n      country: \"\",\r\n      phone: \"\"\r\n  })\r\n\r\n\r\n    // ---------------------------------- Functions ---------------------------------- //\r\n    const check_emptiness = () => {\r\n      for(let item in formState) {\r\n        if(!formState[item]) {\r\n          if(item == \"firstName\" || item == \"lastName\") {\r\n            toast.error(`Name is empty.`);\r\n          }\r\n          else {\r\n            toast.error(`${item} is empty.`);\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    const check_validty = () => {\r\n      const isFullForm = check_emptiness();\r\n      \r\n      if(isFullForm) {\r\n        const validEmail = emailValidity(formState.email);\r\n        const validPhone = phoneValidity(formState.phone);\r\n        if(!validEmail.status) {\r\n          toast.error(validEmail.text);\r\n          return false;\r\n        }\r\n        if(!validPhone.status) {\r\n          toast.error(validPhone.text);\r\n          return false;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    const updateOrders = () => {\r\n      const isValid = check_validty();\r\n      if(isValid) {\r\n        const finalData = {\r\n          personalData: formState,\r\n          orders: [...inCartItems]\r\n        }\r\n        let newOrders = [];\r\n        if(ordersList) {\r\n          newOrders = [...ordersList];\r\n          newOrders.push(finalData);\r\n        }\r\n        updateOrdersList([...newOrders]);\r\n        updateInCart([]);\r\n        navigate(routesList.ordersList.url);\r\n        toast.success(\"Payment was successfull.\")\r\n      }\r\n    }\r\n\r\n    const defaultForm = () => {\r\n      const defaultInfo = profile;\r\n      const newForm = {...formState};\r\n      for(let item in newForm) {\r\n        if(defaultInfo[item]) {\r\n          newForm[item] = defaultInfo[item];\r\n        }\r\n      }\r\n      setFormState({...newForm})      \r\n    }\r\n\r\n    // ---------------------------------- Effects ---------------------------------- //\r\n    useEffect(() => {\r\n      setLocalOrders();\r\n      defaultForm()\r\n    }, [])\r\n    \r\n    return (\r\n      <Container>\r\n        <div className='flex flex-col md:flex-row justify-between items-center gap-4 pt-5 sm:pt-5 sm:pt-14 min-h-[80vh] mainBorder-t'>\r\n          <OrderForm \r\n            formState={formState} \r\n            setFormState={setFormState}\r\n          />\r\n\r\n          <div className=\"w-[300px] mt-10 md:mt-0 \">\r\n            <TotalAmount \r\n              navigateTitle={\"PROCEED TO PAYMENT\"}\r\n              onClickBtn={updateOrders}\r\n              isValid={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Orders","export const emailValidity = (input) => {\r\n    if(!input) {\r\n        return {\r\n            status: false,\r\n            text: \"Email is empty\"\r\n        };\r\n    }\r\n    if( !(input.includes(\"@\") && (input.includes(\".com\") || input.includes(\".org\") || input.includes(\".net\"))) ) {\r\n        return {\r\n            status: false,\r\n            text: \"Enter a Correct Email\"\r\n        };\r\n    }\r\n    return {\r\n        status: true,\r\n    };;\r\n}"],"names":["phoneValidity","input","Boolean","Number","length","status","text","_ref","navigateTitle","isValid","onClickBtn","currencies","delivery_fee","useContext","ShopContext","inCartItems","InCartContext","total","setTotal","useState","content","name","quantity","useEffect","calculateTotal","sum","item","number","product","price","_jsxs","className","children","_jsx","Title","text1","text2","map","index","_item$name","_item$quantity","uk","sign","onClick","disabled","formState","setFormState","_Fragment","id","isFull","label","type","htmlFor","onChange","e","newStates","key","value","onChangeHandle","target","defaultValue","navigate","useNavigate","profile","ProfileContext","routesList","RouteContext","updateInCart","ordersList","setLocalOrders","updateOrdersList","OrdersContext","firstName","lastName","email","street","city","state","zip","country","phone","check_validty","check_emptiness","toast","error","validEmail","emailValidity","validPhone","defaultForm","defaultInfo","newForm","Container","OrderForm","TotalAmount","updateOrders","finalData","personalData","orders","newOrders","push","url","success","includes"],"sourceRoot":""}